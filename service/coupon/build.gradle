plugins {

}

group = 'com.webest'
version = '0.0.1-SNAPSHOT'

dependencies {
    implementation project(":web-core")
    implementation project(":app-core")

    // QueryDSL
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // mapStruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // redis-redisson 동시성처리
    implementation 'org.redisson:redisson-spring-boot-starter:3.36.0'

    // kafka
    implementation 'org.springframework.kafka:spring-kafka'

    // # Logback <-> Logstash 연동을 위함
    implementation 'net.logstash.logback:logstash-logback-encoder:8.0'

    // actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // prometheus (https://mvnrepository.com/artifact/io.micrometer/micrometer-registry-prometheus)
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

    /*
        아래는 테스트 config
     */
    // 테스트 카프카
    testImplementation 'org.springframework.kafka:spring-kafka-test'

    // 테스트 container
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:kafka'


    // test DB
    testRuntimeOnly 'com.h2database:h2'
}
